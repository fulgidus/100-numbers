name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
    tags:
      - "v*.*.*" # Trigger on version tags like v1.0.0, v2.1.3, etc.
  pull_request:
    branches: [main, master]

permissions:
  contents: write
  actions: write
  checks: write
  issues: write
  pull-requests: write

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.1

      - name: Verify Zig installation
        run: zig version

      - name: Run comprehensive tests
        run: zig build test

      - name: Build debug version
        run: zig build

      - name: Build optimized version
        run: zig build -Doptimize=ReleaseFast

  build-and-release:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')

    strategy:
      matrix:
        target:
          - name: linux-x86_64
            zig-target: x86_64-linux
            artifact-name: 100-numbers-linux-x86_64
          - name: windows-x86_64
            zig-target: x86_64-windows
            artifact-name: 100-numbers-windows-x86_64.exe
          - name: macos-x86_64
            zig-target: x86_64-macos
            artifact-name: 100-numbers-macos-x86_64
          - name: macos-aarch64
            zig-target: aarch64-macos
            artifact-name: 100-numbers-macos-aarch64
          - name: linux-aarch64
            zig-target: aarch64-linux
            artifact-name: 100-numbers-linux-aarch64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.1

      - name: Build for ${{ matrix.target.name }}
        run: |
          mkdir -p artifacts
          zig build -Doptimize=ReleaseFast -Dtarget=${{ matrix.target.zig-target }}
          cp zig-out/bin/100* artifacts/${{ matrix.target.artifact-name }} || cp zig-out/bin/100.exe artifacts/${{ matrix.target.artifact-name }} || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target.artifact-name }}
          path: artifacts/${{ matrix.target.artifact-name }}
          retention-days: 90

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-and-release
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Extract version from tag
        id: version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "version=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "Generated version: $TAG_NAME"

      - name: Prepare release assets
        run: |
          cd release-artifacts
          for dir in */; do
            if [ -d "$dir" ]; then
              cd "$dir"
              file=$(ls)
              # Add executable permission for Unix binaries
              if [[ "$file" != *.exe ]]; then
                chmod +x "$file"
              fi
              # Create compressed archives
              if [[ "$file" == *.exe ]]; then
                zip "../${dir%/}.zip" "$file"
              else
                tar -czf "../${dir%/}.tar.gz" "$file"
              fi
              cd ..
            fi
          done
          ls -la

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: "100 Numbers Game Solver ${{ steps.version.outputs.version }}"
          body: |
            ## ðŸŽ¯ 100 Numbers Game Solver

            Automated release of the high-performance multithreaded solver for the 100 Numbers Game.

            ### ðŸ“¦ Downloads

            - **Windows (x64)**: `100-numbers-windows-x86_64.zip`
            - **Linux (x64)**: `100-numbers-linux-x86_64.tar.gz`
            - **Linux (ARM64)**: `100-numbers-linux-aarch64.tar.gz`
            - **macOS (Intel)**: `100-numbers-macos-x86_64.tar.gz`
            - **macOS (Apple Silicon)**: `100-numbers-macos-aarch64.tar.gz`

            ### ðŸš€ Performance
            - Multithreaded solver utilizing all CPU cores
            - Up to 5.9M games/second on high-end systems
            - Automatic solution detection and saving

            ### ðŸ“‹ Requirements
            - No external dependencies
            - Compatible with Windows 10+, Linux, macOS 10.15+

            ### ðŸ”§ Usage
            ```bash
            # Extract and run
            ./100-numbers-linux-x86_64

            # Or on Windows
            100-numbers-windows-x86_64.exe
            ```

            **Built from commit**: ${{ github.sha }}
          files: |
            release-artifacts/*.zip
            release-artifacts/*.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
