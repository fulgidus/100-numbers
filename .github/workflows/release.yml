name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.1

      - name: Run comprehensive tests
        run: zig build test

      - name: Build optimized version
        run: zig build -Doptimize=ReleaseFast

  build-release:
    name: Build and Release
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        target:
          - name: linux-x86_64
            zig-target: x86_64-linux
            artifact-name: 100-numbers-linux-x86_64
            archive-cmd: tar -czf
            archive-ext: .tar.gz
          - name: windows-x86_64
            zig-target: x86_64-windows
            artifact-name: 100-numbers-windows-x86_64.exe
            archive-cmd: zip
            archive-ext: .zip
          - name: macos-x86_64
            zig-target: x86_64-macos
            artifact-name: 100-numbers-macos-x86_64
            archive-cmd: tar -czf
            archive-ext: .tar.gz
          - name: macos-aarch64
            zig-target: aarch64-macos
            artifact-name: 100-numbers-macos-aarch64
            archive-cmd: tar -czf
            archive-ext: .tar.gz
          - name: linux-aarch64
            zig-target: aarch64-linux
            artifact-name: 100-numbers-linux-aarch64
            archive-cmd: tar -czf
            archive-ext: .tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.1

      - name: Build for ${{ matrix.target.name }}
        run: |
          zig build -Doptimize=ReleaseFast -Dtarget=${{ matrix.target.zig-target }}
          mkdir -p release
          # Handle different executable extensions
          if [ -f "zig-out/bin/100.exe" ]; then
            cp zig-out/bin/100.exe release/${{ matrix.target.artifact-name }}
          else
            cp zig-out/bin/100 release/${{ matrix.target.artifact-name }}
            chmod +x release/${{ matrix.target.artifact-name }}
          fi

      - name: Create archive
        run: |
          cd release
          if [[ "${{ matrix.target.archive-ext }}" == ".zip" ]]; then
            zip ${{ matrix.target.name }}${{ matrix.target.archive-ext }} ${{ matrix.target.artifact-name }}
          else
            tar -czf ${{ matrix.target.name }}${{ matrix.target.archive-ext }} ${{ matrix.target.artifact-name }}
          fi

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: release/${{ matrix.target.name }}${{ matrix.target.archive-ext }}
          body: |
            ## ðŸŽ¯ 100 Numbers Game Solver ${{ github.ref_name }}

            High-performance multithreaded solver for the 100 Numbers Game written in Zig.

            ### ðŸ“¦ Platform Downloads

            Choose the appropriate binary for your system:

            - **Windows x64**: `windows-x86_64.zip`
            - **Linux x64**: `linux-x86_64.tar.gz`
            - **Linux ARM64**: `linux-aarch64.tar.gz`
            - **macOS Intel**: `macos-x86_64.tar.gz`
            - **macOS Apple Silicon**: `macos-aarch64.tar.gz`

            ### ðŸš€ Features

            - **Multithreaded Performance**: Utilizes all available CPU cores
            - **High Throughput**: Up to 5.9M game simulations per second
            - **Automatic Solution Detection**: Saves perfect solutions when found
            - **Cross-platform**: Native binaries for all major platforms
            - **Zero Dependencies**: Self-contained executables

            ### ðŸ”§ Quick Start

            #### Linux/macOS
            ```bash
            # Extract the archive
            tar -xzf 100-numbers-linux-x86_64.tar.gz

            # Run the solver
            ./100-numbers-linux-x86_64
            ```

            #### Windows
            ```cmd
            # Extract the zip file and run
            100-numbers-windows-x86_64.exe
            ```

            ### ðŸ“Š Performance

            The solver implements advanced Monte Carlo simulation techniques with:
            - Intelligent batching to reduce mutex contention
            - Hash-based solution deduplication
            - Automatic scaling to available CPU cores
            - Real-time performance monitoring

            ### ðŸ’¡ About the Game

            The 100 Numbers Game is a strategic puzzle where you fill a 10Ã—10 grid with consecutive numbers 1-100, following specific movement rules (3 cells orthogonally or 2 cells diagonally).

            **Built with Zig 0.14.1**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
