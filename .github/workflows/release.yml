name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.1

      - name: Run comprehensive tests
        run: zig build test

      - name: Build optimized version
        run: zig build -Doptimize=ReleaseFast
  build-release:
    name: Build and Release
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.1

      - name: Build all platforms
        run: |
          mkdir -p release
          
          # Build for Linux x86_64
          zig build -Doptimize=ReleaseFast -Dtarget=x86_64-linux
          cp zig-out/bin/100 release/100-numbers-linux-x86_64
          chmod +x release/100-numbers-linux-x86_64
          
          # Build for Windows x86_64
          zig build -Doptimize=ReleaseFast -Dtarget=x86_64-windows
          cp zig-out/bin/100.exe release/100-numbers-windows-x86_64.exe
          
          # Build for macOS x86_64
          zig build -Doptimize=ReleaseFast -Dtarget=x86_64-macos
          cp zig-out/bin/100 release/100-numbers-macos-x86_64
          chmod +x release/100-numbers-macos-x86_64
          
          # Build for macOS ARM64
          zig build -Doptimize=ReleaseFast -Dtarget=aarch64-macos
          cp zig-out/bin/100 release/100-numbers-macos-aarch64
          chmod +x release/100-numbers-macos-aarch64
          
          # Build for Linux ARM64
          zig build -Doptimize=ReleaseFast -Dtarget=aarch64-linux
          cp zig-out/bin/100 release/100-numbers-linux-aarch64
          chmod +x release/100-numbers-linux-aarch64

      - name: Create archives
        run: |
          cd release
          
          # Create ZIP for Windows
          zip 100-numbers-windows-x86_64.zip 100-numbers-windows-x86_64.exe
          
          # Create tar.gz for Unix systems
          tar -czf 100-numbers-linux-x86_64.tar.gz 100-numbers-linux-x86_64
          tar -czf 100-numbers-linux-aarch64.tar.gz 100-numbers-linux-aarch64
          tar -czf 100-numbers-macos-x86_64.tar.gz 100-numbers-macos-x86_64
          tar -czf 100-numbers-macos-aarch64.tar.gz 100-numbers-macos-aarch64
            # List created archives
          ls -la *.zip *.tar.gz
          
      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*.zip
            release/*.tar.gz
          body: |
            ## ðŸŽ¯ 100 Numbers Game Solver ${{ github.ref_name }}

            High-performance multithreaded solver for the 100 Numbers Game written in Zig.

            ### ðŸ“¦ Platform Downloads

            Choose the appropriate binary for your system:

            - **Windows x64**: `windows-x86_64.zip`
            - **Linux x64**: `linux-x86_64.tar.gz`
            - **Linux ARM64**: `linux-aarch64.tar.gz`
            - **macOS Intel**: `macos-x86_64.tar.gz`
            - **macOS Apple Silicon**: `macos-aarch64.tar.gz`

            ### ðŸš€ Features

            - **Multithreaded Performance**: Utilizes all available CPU cores
            - **High Throughput**: Up to 5.9M game simulations per second
            - **Automatic Solution Detection**: Saves perfect solutions when found
            - **Cross-platform**: Native binaries for all major platforms
            - **Zero Dependencies**: Self-contained executables

            ### ðŸ”§ Quick Start

            #### Linux/macOS
            ```bash
            # Extract the archive
            tar -xzf 100-numbers-linux-x86_64.tar.gz

            # Run the solver
            ./100-numbers-linux-x86_64
            ```

            #### Windows
            ```cmd
            # Extract the zip file and run
            100-numbers-windows-x86_64.exe
            ```

            ### ðŸ“Š Performance

            The solver implements advanced Monte Carlo simulation techniques with:
            - Intelligent batching to reduce mutex contention
            - Hash-based solution deduplication
            - Automatic scaling to available CPU cores
            - Real-time performance monitoring

            ### ðŸ’¡ About the Game

            The 100 Numbers Game is a strategic puzzle where you fill a 10Ã—10 grid with consecutive numbers 1-100, following specific movement rules (3 cells orthogonally or 2 cells diagonally).

            **Built with Zig 0.14.1**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
